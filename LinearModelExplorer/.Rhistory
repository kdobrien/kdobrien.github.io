2 * pt(t2,9 - 1,lower.tail=FALSE)
x1 <- c(.929,-1.745,1.677,0.701,0.128) # new (ln hours)
x2 <- c(2.233,-2.513,1.204,1.938,2.533)
mu1 <- mean(x1)
mu2 <- mean(x2)
s1 <- sd(x1)
s2 <- sd(x2)
s1
s2
x1 <- c(.929,-1.745,1.677,0.701,0.128) # new (ln hours)
x2 <- c(2.233,-2.513,1.204,1.938,2.533)
mu1 <- mean(x1)
mu2 <- mean(x2)
s1 <- sd(x1)
s2 <- sd(x2)
n1 <- length(x1)
n2 <- length(x2)
t <- (mu1 - mu2) / sqrt(s1^2 / n1 + s2^2 / n2)
t
* pt(t,n - 1,lower.tail=FALSE)
pt(t,n - 1,lower.tail=FALSE)
t.test(x1,x2,alternative="smaller",paired=TRUE)
t.test(x1,x2,alternative="less",paired=TRUE)
pt(abs(t),n-1,lower.tail=FALSE)
t
t <- (mu1 - mu2) / sqrt(((s1^2 + s2^2) /2) / n1)
t
pt(abs(t),n-1,lower.tail=FALSE)
t <- (mu1 - mu2) / sqrt(((s1^2 + s2^2) /4) / n1)
pt(abs(t),n-1,lower.tail=FALSE)
n
t.test(x1,x2,alternative="less")
t.test(x1,x2,alternative="less",paired=TRUE)
x <- x1 - x2
mu = mean(x)
s <- sd(x)
n <- length(x)
t <- mu / (s / sqrt(n))
pt(abs(t),n - 1,lower.tail=FALSE)
x1 <- c(.929,-1.745,1.677,0.701,0.128) # new (ln hours)
x2 <- c(2.233,-2.513,1.204,1.938,2.533)
x <- x1 - x2
mu = mean(x)
s <- sd(x)
n <- length(x)
t <- mu / (s / sqrt(n))
pt(abs(t),n - 1,lower.tail=FALSE)
mu + c(-1,2) * qt(t,n - 1,lower.tail=FALSE) * s / sqrt(n)
x1 <- c(.929,-1.745,1.677,0.701,0.128) # new (ln hours)
x2 <- c(2.233,-2.513,1.204,1.938,2.533)
x <- x1 - x2
mu = mean(x)
s <- sd(x)
n <- length(x)
t <- mu / (s / sqrt(n))
mu + c(-1,2) * pt(t,n - 1,lower.tail=FALSE) * s / sqrt(n)
t.test(x1 - x2,paired=TRUE)
t.test(x1 - x2)
exp(x1)
x1 <- exp(x1)
x2 <- exp(x2)
x <- x1 - x2
mu = mean(x)
s <- sd(x)
n <- length(x)
t <- mu / (s / sqrt(n))
pt(abs(t),n - 1,lower.tail=FALSE)
t.test(x1,x2,alternative="less",paired=TRUE)
pt(1.645 - .01 / (.04/10),99,lower.tail=FALSE)
n=100
pt(1.645 - .01 / (.04/n),n - 1,lower.tail=FALSE)
pt(1.645 - .01 / (.04/sqrt(n)),n - 1,lower.tail=FALSE)
n=1000
pt(1.645 - .01 / (.04/sqrt(n)),n - 1,lower.tail=FALSE)
n=500
pt(1.645 - .01 / (.04/sqrt(n)),n - 1,lower.tail=FALSE)
n=200
pt(1.645 - .01 / (.04/sqrt(n)),n - 1,lower.tail=FALSE)
n=180
pt(1.645 - .01 / (.04/sqrt(n)),n - 1,lower.tail=FALSE)
n=120
pt(1.645 - .01 / (.04/sqrt(n)),n - 1,lower.tail=FALSE)
n=130
pt(1.645 - .01 / (.04/sqrt(n)),n - 1,lower.tail=FALSE)
n=140
pt(1.645 - .01 / (.04/sqrt(n)),n - 1,lower.tail=FALSE)
pt(1.645 - .01 / (.04/sqrt(n)),n - 1,lower.tail=FALSE)
qt(.95,10)
qt(.95,100)
pt(qt(.95,n - 1) - .01 / (.04/sqrt(n)),n-1,lower.tail=FALSE)
n = 140
pt(qt(.95,n - 1) - .01 / (.04/sqrt(n)),n-1,lower.tail=FALSE)
?power
?p.test
n1 <- 288
n2 <- 288
mudelta <- 2
s1 <- s2 <- 12
pt(qnorm(.975 - mudelta / sqrt(s1^2 / n1 + s2^2 / n2),lower.tail=FALSE)
)
n1 <- 288
n2 <- 288
mudelta <- 2
s1 <- s2 <- 12
pt(qnorm(.975) - mudelta / sqrt(s1^2 / n1 + s2^2 / n2),lower.tail=FALSE)
n1 <- 288
n2 <- 288
mudelta <- 2
s1 <- s2 <- 12
pt(qnorm(.975) - mudelta / sqrt(s1^2 / n1 + s2^2 / n2),lower.tail=FALSE)
n1 <- 288
n2 <- 288
mudelta <- 2
s1 <- s2 <- 12
pt(qnorm(.975) - mudelta / sqrt(s1^2 / n1 + s2^2 / n2),df = n1 + n2 - 2lower.tail=FALSE)
n1 <- 288
n2 <- 288
mudelta <- 2
s1 <- s2 <- 12
pt(qnorm(.975) - mudelta / sqrt(s1^2 / n1 + s2^2 / n2),df = n1 + n2 - 2,lower.tail=FALSE)
qnorm(.975)
n1 <- 288
n2 <- 288
mudelta <- 2
s1 <- s2 <- 12
# ts = (mu1 - mu2) / (s * sqrt(1/n1 + 1/n2)))
pt(qnorm(.975) - mudelta / (s1 * sqrt(1/n1 + 1/n2)),df = n1 + n2 - 2,lower.tail=FALSE)
swirl()
View(ravenData)
mdl <- glm(ravenWInNum ~ ravenScore, family="binomial", data=ravenData )
mdl <- glm(ravenWinNum ~ ravenScore, family="binomial", data=ravenData )
lodds <- predict(mdl, data.frame(ravenScore=c(0, 3, 6)))
exp(lodds)/(1+exp(lodds))
summary(mdl)
exp(confint(mdl))
anova(mdl)
qchisq(0.95, 1)
n <- 1000
var(rpois(1000, 50))
nxt()
View(hits)
class(hits[,'date'])
as.integer(head(hits[,'date']))
mdl <- glm(visits ~ date, poisson, hits)
summary(mdl)
exp(confint(mdl, 'date'))
which.max(hits[,'visits'])
hits[704,]
lambda <- which.max(hits[,'visits'])
lambda <- mdl$fitted.values[704]
qpois(.95, lambda)
mdl2 <- glm(visits ~ date, poisson, hits, offset=log(visits+1))
mdl2 <- glm(simplystats ~ date, poisson, hits, offset=log(visits+1))
qpois(.95, mdl2$fitted.values[704])
x1 <- c(140, 138, 150, 148, 135) # baseline
x2 <- c(138, 136, 148, 146, 133) # 2 weeks later
x <- x1 - x2
mu1 <- mean(x1)
mu2 <- mean(x2)
s1 <- sd(x1)
s2 <- sd(x2)
n1 <- length(x1)
n2 <- length(x2)
mu1
n1
s1
mu2
s2
mean(x)
sd(x)
qnorm(.975)
x1 <- c(.929,-1.745,1.677,0.701,0.128) # new (ln hours)
x2 <- c(2.233,-2.513,1.204,1.938,2.533)
x <- x1 - x2
mu = mean(x)
s <- sd(x)
n <- length(x)
t <- mu / (s / sqrt(n))
mu + c(-1,2) * pt(t,n - 1,lower.tail=FALSE) * s / sqrt(n)
x1 <- c(.929,-1.745,1.677,0.701,0.128) # new (ln hours)
x2 <- c(2.233,-2.513,1.204,1.938,2.533)
x <- x1 - x2
mu = mean(x)
s <- sd(x)
n <- length(x)
t <- mu / (s / sqrt(n))
t.test(x1,x2,paired=TRUE)
exp(-2.393248)
binom.test(3,4,.75,alternative="less")
?binomail.test
?binomial.test
?binom.test
binom.test(3,4,.5,alternative="greater")
binom.test(3,4,.5,alternative="greater")
binom.test(3,4,.5,alternative="two.sided")
sqrt((1-45/60)/45 + (1-21/73)/21)
exp(sqrt((1-45/60)/45 + (1-21/73)/21))
binom.test(70,85,.5,"greater")
binom.test(70,100,.5,"greater")
pnorm(5.96559)
qnorm(5.96559)
?pnorm
pnorm(6.7)
pnorm(6.7,lower.tail=FALSE)
pnorm(5.9,lower.tail=FALSE)
pnorm(5.96559,lower.tail=FALSE)
pnorm(10,lower.tail=FALSE)
pnorm(2.86079,lower.tail=FALSE)
pnorm(2.86079)
pnorm(2.86079,lower.tail=FALSE)
pnorm(7.86838,lower.tail=FALSE)
exp(2.38)
p1 <- 45/(45+21)
p2 <- 15/(15+52)
sqrt((1-p1)/(p1*66) + (1-p2)/(p2*67))
n1 <- 45+21
n2 <- 15+52
p1 <- 45/n1
p2 <- 15/n2
p1
p2
sqrt((1-p1)/(p1*n1) + (1-p2)/(p2*n2))
?binom.test
binom.test(75,100,p=.75,alternative="two.sided")
binom.test(75,100,p=.5,alternative="two.sided")
binom.test(3,4,p=.75,alternative="two.sided")
binom.test(3,4,p=.5,alternative="two.sided")
pchisq(9.52281,2,lower.tail=FALSW)
pchisq(9.52281,2,lower.tail=FALSE)
pchisq(7.24934,8,lower.tail=FALSE)
dat <- matrix(c(4,3,2,6),2)
dat
?fisher.test
fisher.test(dat)
dat <- matrix(c(3,1,2,4),2)
fisher.test(dat,alternative="greater")
fisher.test(dat,alternative="less")
fisher.test(dat,alternative="greater")
pchisq(7.88240,2,lower.tail=FALSE)
dat <- matrix(c(43,4,8,45),2)
dat
dat <- matrix(c(3,1,2,4),2)
dat
dat <- matrix(c(3,1,2,4),1)
dat
dat <- matrix(c(3,1,2,4),2)
dat <- matrix(c(4,1,2,6,6,7),2)
dat
fisher.test(dat)
dat <- matrix(c(4,1,2,6),2)
fisher.test(dat)
dat <- matrix(c(3,2,1,4),2)
dat
fisher.test(dat,alternative="greater")
dat <- matrix(c(140,153,7,100,101.5,50,34.8),2)
dat <- matrix(c(140,153,100,101.5,50,34.8),2)
dat
fisher.test(dat)
dat <- matrix(c(43,8,4,45),2)
fisher.test(dat)
pchisq(.68,3,lower.tail=FALSE)
dat <- matrix(c(65,70,15,35,30,85),2)
dat
dat <- matrix(c(65,70,15,35,30,85),3)
dat
chisq.test(dat)
chisq.test(dat,alternative="greater")
chisq.test(dat,alternative="larger")
chisq.test(dat)
pchisq(74,2,lower.tail=FALSE)
pchisq(4.197,1,lower.tail=FALSE)
dat <- matrix(c(4,1,2,6),2)
dat
fisher.test(dat)
dat <- matrix(c(140,53,100,35,50,12),2)
dat
chisq.test(dat)
chisq.test(dat,alternative="larger")
chisq.test(dat,alternative="greater")
chisq.test(dat,lower.tail=FALSE)
?chisq.test
dat <- matrix(c(43,45,8,4),2)
chisq.test(dat,lower.tail=FALSE)
chisq.test(dat)
dat <- matrix(c(43,8,4,45),2)
dat
chisq.test(dat)
dat <- matrix(c(140,153.7,100,101.5,50,34.8),2)
dat
chisq.test(dat)
chisq.test(dat)
dat <- matrix(c(140,.53,100,.35,50,.12),2)
dat
chisq.test(dat)
dat <- matrix(c(140/290,.53,100/290,.35,50/290,.12),2)
dat
chisq.test(dat)
dat <- matrix(c(140,153.7,100,101.5,50,34.8),2)
chisq.test(dat,simulate.p.value=TRUE)
chisq.test(dat,simulate.p.value=TRUE,B=10000)
x = 290
dat <- matrix(c(140,153.7,100,101.5,50,.35*x),2)
dat
dat <- matrix(c(140,.53*x,100,.35*x,50,.12*x),2)
dat
x = 300
dat <- matrix(c(140,.53*x,100,.35*x,50,.12*x),2)
dat
chisq.test(dat)
x = 290
chisq.test(dat)
dat
dat <- matrix(c(140,.53*x,100,.35*x,50,.12*x),2)
dat
chisq.test(dat)
(140-153.7)^2/153.7 + (100-101.5)^2/101.5 + (50-34.8)^2/34.8
pchisq(7.882393,2,lower.tail=FALSE)
dat <- array(c(8,52,25,29,5,164,21,128),2,2,2))
dat <- array(c(8,52,25,29,5,164,21,128),2,2,2)
dat <- array(c(8,52,25,29,5,164,21,128),c(2,2,2)
dat
print dat
dat <- array(c(8,52,25,29,5,164,21,128),c(2,2,2))
dat
dat <- array(c(8,52,5,164,25,29,21,128),c(2,2,2))
dat
mantelhaen.test(dat)
?wilcox.test
dat1 <- array(c(5,-1,4,0),c(2,2))
dat1
wilcox.test(dat1)
dat1
mcnemar.test(dat1)
dat1 <- array(c(5,1,4,0),c(2,2))
dat1
mcnemar.test(dat1)
mcnemar.test(dat1,alternative="two.sided")
?mcnemar.test
mcnemar.test(dat1)
dat2 <- array(c(243,189,54,153),c(2,2))
dat2
mcnemar.test(dat2)
dat3 <- array(c(243,189,54,153),c(2,2))
binom.test(4,5)
binom.test(4,20)
binom.test(18,20)
binom.test(19,20)
binom.test(5,5)
binom.test(5,5)
?binom.test
binom.test(5,5,alternative="greater")
binom.test(4,5,alternative="greater")
binom.test(18,20,alternative="greater")
binom.test(19,20,alternative="greater")
binom.test(4,5,p=.9,alternative="greater")
binom.test(4,5,p=.5,alternative="greater")
binom.test(4,5,p=.9,alternative="greater")
wilcox.test(c(1,1,1))
wilcox.test(c(1,-1,1))
wilcox.test(c(8,8,8))
wilcox.test(c(-8,-8,-8))
wilcox.test(c(-8,-8,188))
wilcox.test(c(8,8,188))
wilcox.test(c(800,800,188))
wilcox.test(c(800,800,800))
wilcox.test(c(800,825,850))
wilcox.test(c(800,801,802))
wilcox.test(c(8,9,4))
mcnemar.test(matrix(c(55,12,41,20),2))
exp(.154)
library(AppliedPredictiveModeling)
data(segmentationOriginal)
library(caret)
set.seed(125)
inTrain = createDataPartition(segmentationOriginal$Case,p=.7,list=FALSE)
training = segmentationOriginal[inTrain,]
testing = segmentationOriginal[-inTrain,]
dim(training);dim(testing)
modFit <- train(Case ~ .,method="rpart",data=segmentationOriginal)
names(segmentationOriginal)
library(rattle)
fancyPlot(modFit$finalModel)
fancyPlot(modFit$finalModel)
library(rattle)
fancyPlot(modFit$finalModel)
library(manipulate)
myPlot <- function(s) {
plot(cars$dist - mean(cars$dist), cars$speed - mean(cars$speed))
abline(0, s)
}
manipulate(myPlot(s), slider = x(0, 2, step = 0.1))
?manipulate
manipulate(myPlot(s), s = slider(0, 2, step = 0.1))
library(rChars)
library(rCharts)
install.packages("rCharts")
install.packages("swirl")
runApp()
libary(shiny)
getwd()
setwd("/Users/kobrien/DataScientist/DataProducts/shinyproject")
runApp()
library(shiny)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
?as.formula
runApp()
runApp()
names(CO2)
as.data.frame(CO2)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
?data
?datasets
runApp()
runApp()
?ability.cov
names(ability.cov)
names(ability.cov$cov)
summary(ability.cov)
names(anscombe)
nams(attenu)
names(attenu)
names(attitude)
?attitude
runApp()
?glm
runApp()
?gam
?model
?lme
?lm
runApp()
runApp()
runApp()
?capture.output
runApp()
capture.output(?USJudgeRatings)
?datasets
help.search("USJudgeRatings")
?coef
?corr
?cor
runApp()
?cor
?cor
runApp()
cor(mtcars,use="complete.obs",method="kendall")
p <- capture.output(cor(mtcars,use="complete.obs",method="kendall"))
print p
print(p)
runApp()
for ( i in names(mtcars) )
{}
{ str(mtcars[,i])
}
{ str(mtcars[,i])
{}
}}
names(mtcars)
df <- data.frame()
cbind(df,as.numeric(mtcars,[1]))
cbind(df,as.numeric(mtcars[,1]))
df <- data.frame(nrow(mtcars),ncol(mtcars))
cbind(df,as.numeric(mtcars[,1]))
df
?data.frame
df <- data.frame(as.numeric(mtcars[,1]))
df
cbind(df,as.numeric(mtcars[,2]))
cbind(df,as.numeric(mtcars[,3]))
?cbind
runApp()
install.packages("devtools")
devtools::install_github('rstudio/shinyapps')
install.packages("packrat")
devtools::install_github('rstudio/shinyapps')
shinyapps::setAccountInfo(name='kdobrien84', token='0F7162CDBAF9F0C33FCB574C55E3F0B3', secret='NKYyREbwf6vPtBYTauDDs+qE50sPTj93hx2rXQXq')
devtools::install_github('rstudio/rsconnect'
)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
library(devtools)
install.packages("ggplot2")
library(devtools)
install_github("slidify","ramathv")
install_github("slidify","ramnathv")
install_github("slidifyLibraries","ramnathv")
library(slidify)
setwd("/Users/kobrien/DataScientist/DataProducts/slidify")
author("LinearModelExplorer")
library(png)
?png
```
